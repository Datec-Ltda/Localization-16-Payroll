<?xml version="1.0" encoding="utf-8"?>
<odoo>

<!--    SALARIO MENSUAL    ************************************    -->

    <record id="datec_l10n_bo_hr_payroll_smn" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALARIO MINIMO NACIONAL</field>
        <field name="code">SMN</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = payslip.rule_parameter('SMN')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Reglas de AFP                   -->
<!--    Cotización mensual              -->
    <record id="datec_l10n_bo_hr_payroll_afp_cm" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Cotización mensual </field>
        <field name="code">AFP_CM</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * employee.monthly_quotation/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Prima riesgo común               -->
    <record id="datec_l10n_bo_hr_payroll_afp_prc" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Prima riesgo común</field>
        <field name="code">AFP_PRC</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * employee.common_risk_premium/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Aporte solidario              -->
    <record id="datec_l10n_bo_hr_payroll_afp_as" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Aporte solidario</field>
        <field name="code">AFP_AS</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * employee.solidarity_contribution/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   Comisión AFP               -->
    <record id="datec_l10n_bo_hr_payroll_afp_comis" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Comisión AFP</field>
        <field name="code">AFP_COM</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * employee.afp_commission/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   DESCUENTO AFP               -->
    <record id="datec_l10n_bo_hr_payroll_afp_discount" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">DESCUENTO AFP</field>
        <field name="code">AFP_DISCOUNT</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * employee.aft_quotation_type.percent/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>


<!--   MONTO ANS 1%              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_1" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">MONTO ANS 1%</field>
        <field name="code">ANS_ONE</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if ((GROSS-13000)*1)/100 &lt; 0:
    result = 0
else:
    result = ((GROSS-13000)*1)/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   MONTO ANS 5%              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_5" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">MONTO ANS 5%</field>
        <field name="code">ANS_FIVE</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if ((GROSS-25000)*5)/100 &lt; 0:
    result = 0
else:
    result = ((GROSS-25000)*5)/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   MONTO ANS 10%              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_10" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">MONTO ANS 10%</field>
        <field name="code">ANS_TEN</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if ((GROSS-35000)*10)/100 &lt; 0:
    result = 0
else:
    result = ((GROSS-35000)*10)/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   MONTO ANS TOTAL%              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_discount_anc" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">DESCUENTO ANS</field>
        <field name="code">DESCUENTO_ANS</field>
        <field name="sequence">102</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
ans = 0
if ANS_ONE:
    ans += ANS_ONE
if ANS_FIVE:
    ans += ANS_FIVE
if ANS_TEN:
    ans += ANS_TEN
result = ans
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--   MONTO TOTAL AFP              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_total_afp" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">TOTAL AFP</field>
        <field name="code">TOTAL_AFP</field>
        <field name="sequence">104</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
total_afp = 0
if AFP_DISCOUNT:
    total_afp += AFP_DISCOUNT
if DESCUENTO_ANS:
    total_afp += DESCUENTO_ANS
result = -total_afp
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Horas de ausencia-->
    <record id="datec_l10n_bo_hr_payroll_leave_hours" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Horas de ausencia</field>
        <field name="code">LEAVE_HOURS</field>
        <field name="sequence">102</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.LEAVE_HOURS</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.LEAVE_HOURS.number_of_hours * BC_DIARIA_HORAS
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Dias de ausencia-->
    <record id="datec_l10n_bo_hr_payroll_leave_days" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Días de ausencia</field>
        <field name="code">LEAVE_DAYS</field>
        <field name="sequence">102</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.LEAVE_DAYS</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.LEAVE_DAYS.number_of_days * BC_DIARIA
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Falta injustificada-->
    <record id="datec_l10n_bo_hr_payroll_leave_unjustified_absence" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Falta injustificada</field>
        <field name="code">LEAVE_UNJUSTIFIED</field>
        <field name="sequence">102</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.LEAVE_UNJUSTIFIED</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = special_round(worked_days.LEAVE_UNJUSTIFIED.number_of_hours * BC_DIARIA_FALTA)
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <!--   2 SMN              -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_two_smn" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">2 SMN</field>
        <field name="code">TWO_SMN</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = SMN * 2
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <!--   2 VACACIONES              -->
    <record id="datec_l10n_bo_hr_payroll_vac_payed" model="hr.salary.rule">
        <field name="category_id" ref="FOR_TAX"/>
        <field name="name">Vacaciones</field>
        <field name="code">VAC_PAGADA</field>
        <field name="sequence">200</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = amount_total_gained_in_month(payslip,employee, 'VAC')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <!--   2 PRIMA              -->
    <record id="datec_l10n_bo_hr_payroll_prima_payed" model="hr.salary.rule">
        <field name="category_id" ref="FOR_TAX"/>
        <field name="name">Prima</field>
        <field name="code">PRIMA_PAGADA</field>
        <field name="sequence">200</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = amount_total_gained_in_month(payslip,employee, 'PRIMA')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <!--   NETO IMPONIBLE               -->
    <record id="datec_l10n_bo_hr_payroll_neto_deduciones" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Sueldo neto menos deducciones</field>
        <field name="code">NETO_IMPONIBLE</field>
        <field name="sequence">202</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
total = 0
if VAC_PAGADA:
    total += VAC_PAGADA
if PRIMA_PAGADA:
    total += PRIMA_PAGADA
result = NET + total
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <!--   BASE IMPONIBLE               -->
    <record id="datec_l10n_bo_hr_payroll_anc_amount_taxable_base" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">BASE IMPONIBLE</field>
        <field name="code">BASE_IMPONIBLE</field>
        <field name="sequence">203</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = NETO_IMPONIBLE - TWO_SMN
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_percen_tax" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">% IMPUESTO</field>
        <field name="code">PERCEN_TAX</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = payslip.rule_parameter('TAX')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_tax" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">IMPUESTO</field>
        <field name="code">IMPUESTO</field>
        <field name="sequence">203</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASE_IMPONIBLE * PERCEN_TAX / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_tax_smn" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">TAX * 2 SMN</field>
        <field name="code">TAX_2_SMN</field>
        <field name="sequence">204</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if IMPUESTO == 0:
    result = 0
else:
    result = TWO_SMN * PERCEN_TAX / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_tax_neto_rc_iva" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">IMPUESTO NETO RC-IVA</field>
        <field name="code">IMP_NETO_RC_IVA</field>
        <field name="sequence">205</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if (IMPUESTO - TAX_2_SMN) &lt; 0:
    result = 0
else:
    result = IMPUESTO - TAX_2_SMN
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_iva_form_110" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">IVA FORM.110</field>
        <field name="code">IVA_FORM_110</field>
        <field name="sequence">206</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if inputs.IVA_Form_110:
    result = inputs.IVA_Form_110.amount
else:
    result=0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_saldo_fisco" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO A FAVOR DE FISCO</field>
        <field name="code">SALDO_A_FAVOR_FISCO</field>
        <field name="sequence">207</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if IMP_NETO_RC_IVA > IVA_FORM_110:
    result = IMP_NETO_RC_IVA - IVA_FORM_110
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_saldo_depend" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO A FAVOR DEL DEPENDIENTE</field>
        <field name="code">SALDO_A_FAVOR_DEPEND</field>
        <field name="sequence">208</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if IVA_FORM_110 > IMP_NETO_RC_IVA:
    result = IVA_FORM_110 - IMP_NETO_RC_IVA
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_saldo_favor_mes_ant" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO A FAVOR MES ANTERIOR</field>
        <field name="code">SALDO_A_FAVOR_MES_ANT</field>
        <field name="sequence">209</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = credit_balance_previous_month(payslip,employee)
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_saldo_actualizacion" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">ACTUALIZACION</field>
        <field name="code">ACTUALIZACION</field>
        <field name="sequence">210</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if LAST_UFV != 0:
    result = SALDO_A_FAVOR_MES_ANT * CURRENT_UFV/LAST_UFV -SALDO_A_FAVOR_MES_ANT
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_sal_ant_act" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO ANTERIOR ACTUALIZADO</field>
        <field name="code">SAL_ANT_ACT</field>
        <field name="sequence">211</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = SALDO_A_FAVOR_MES_ANT + ACTUALIZACION
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_sal_use" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO UTILIZADO</field>
        <field name="code">SALDO_UTILIZADO</field>
        <field name="sequence">212</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if SAL_ANT_ACT &lt;= SALDO_A_FAVOR_FISCO:
    result = SAL_ANT_ACT
else:
    if SALDO_A_FAVOR_FISCO &lt;= SAL_ANT_ACT:
        result = SALDO_A_FAVOR_FISCO;
    else:
        result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_tax_ret" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">IMPUESTO RETENIDO A PAGAR</field>
        <field name="code">IMP_RET_PAGAR</field>
        <field name="sequence">213</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if SALDO_A_FAVOR_FISCO > SALDO_UTILIZADO:
    result = SALDO_A_FAVOR_FISCO - SALDO_UTILIZADO
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_amount_next_month" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">SALDO A FAVOR MES SIGUIENTE </field>
        <field name="code">SAL_PROX_MES</field>
        <field name="sequence">213</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = SALDO_A_FAVOR_DEPEND + SAL_ANT_ACT - SALDO_UTILIZADO
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>


    <record id="datec_l10n_bo_hr_payroll_antiquity_bonus" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">BONO ANTIGUEDAD</field>
        <field name="code">BONO_ANT</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = (payslip.rule_parameter('SMN') * 3 * leave_antiquity_bonus(payslip,employee))/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_production_bonus" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">BONO PRODUCCION</field>
        <field name="code">BONO_PROD</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if inputs.BONO_PROD:
    result = inputs.BONO_PROD.amount
else:
    result=0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_frontier_subsidy" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">SUBSIDIO FRONTERA</field>
        <field name="code">SUBS_FRONTERA</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if employee.frontier_subsidy:
    result = BASIC * payslip.rule_parameter('SUB_FRONT')/100
else:
    result=0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_overtime_amount" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">HORAS EXTRAS</field>
        <field name="code">EXTRAS</field>
        <field name="sequence">11</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.HE</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASIC/30/8 *2 * worked_days.HE.number_of_hours
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_sunday_overtime" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">Dominical y Dom. Trab. </field>
        <field name="code">DOMINGO</field>
        <field name="sequence">11</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.HED</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASIC/30/8 * 2 * worked_days.HED.number_of_hours
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_night_overtime" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">RECARGO</field>
        <field name="code">RECARGO</field>
        <field name="sequence">11</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.HRN</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASIC/30/8*2 * worked_days.HRN.number_of_hours
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Reglas de calculos basicos    -->

    <record id="datec_l10n_bo_hr_payroll_bc_diaria" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Base cálculo diaria Básico</field>
        <field name="code">BC_DIARIA</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASIC / 30
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Reglas de calculos basicos    -->

    <record id="datec_l10n_bo_hr_payroll_bc_diaria_falta" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Base cálculo para falta</field>
        <field name="code">BC_DIARIA_FALTA</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = round(BASIC / 30 * 2, 2)
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bc_diaria_horas" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Base de cálculo en hora</field>
        <field name="code">BC_DIARIA_HORAS</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = BASIC / 30 / 8
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bc_diaria_gross_total" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Base cálculo diaria Total Devengado</field>
        <field name="code">BC_DIARIA_TOTAL_BRUTO</field>
        <field name="sequence">101</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS / 30
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bc_diaria_total" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Base cálculo diaria Total</field>
        <field name="code">BC_DIARIA_TOTAL</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = NET / 30
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Ausencias de bajas médicas que NO figuran como descuento en boleta pero se pueden cargar en el mes -->
<!--    y se deben generar los conceptos en la nómina para el reporte de la   -->

    <record id="datec_l10n_bo_hr_payroll_baja_bmec_day" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Dias aplicar en Baja Médica Enfermedad Común</field>
        <field name="code">BMEC_DAYS</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BMEC</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.BMEC.number_of_days - payslip.rule_parameter('Discount_BMEC')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_baja_med_enf_com" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Baja Médica Enfermedad Común</field>
        <field name="code">BMEC</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BMEC</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days.BMEC.number_of_days - payslip.rule_parameter('Discount_BMEC')
if days > 0:
    result = BC_DIARIA_TOTAL_BRUTO * get_medical_leave_percent(payslip, 'BMEC') * days
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bm_prenatal_day" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Dias aplicar en Baja Médica Prenatal</field>
        <field name="code">BM_PRENATAL_DAYS</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_PRENATAL</field>
        <field name="amount_select">code</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.BM_PRENATAL.number_of_days - payslip.rule_parameter('Discount_BM_PRENATAL')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_baja_med_prenatal" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Baja Médica Prenatal</field>
        <field name="code">BM_PRENATAL</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_PRENATAL</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days.BM_PRENATAL.number_of_days - payslip.rule_parameter('Discount_BM_PRENATAL')
if days > 0:
    result = BC_DIARIA_TOTAL_BRUTO * get_medical_leave_percent(payslip, 'BM_PRENATAL') * days
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bm_postnatal_day" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Dias aplicar en Baja Médica Postnatal</field>
        <field name="code">BM_POSTNATAL_DAYS</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_POSTNATAL</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.BM_POSTNATAL.number_of_days - payslip.rule_parameter('Discount_BM_POSTNATAL')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_baja_med_postnatal" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Baja Médica Postnatal</field>
        <field name="code">BM_POSTNATAL</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_POSTNATAL</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days.BM_POSTNATAL.number_of_days - payslip.rule_parameter('Discount_BM_POSTNATAL')
if days > 0:
    result = BC_DIARIA_TOTAL_BRUTO * get_medical_leave_percent(payslip, 'BM_POSTNATAL') * days
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bm_acc_lab_day" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Dias aplicar en Baja Médica Accidente Laboral</field>
        <field name="code">BM_ACC_LAB_DAY</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_ACC_LAB</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.BM_ACC_LAB.number_of_days - payslip.rule_parameter('Discount_BM_ACC_LAB')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_baja_acc_lab" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Baja Médica Accidente Laboral</field>
        <field name="code">BM_ACC_LAB</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_ACC_LAB</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days.BM_ACC_LAB.number_of_days - payslip.rule_parameter('Discount_BM_ACC_LAB')
if days > 0:
    result = BC_DIARIA_TOTAL_BRUTO * get_medical_leave_percent(payslip, 'BM_ACC_LAB') * days
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_bm_riesg_ext_day" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Dias aplicar en  Baja Médica RiesgO Extraordinario</field>
        <field name="code">BM_RIESG_EXT_DAY</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_RIESG_EXT</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = worked_days.BM_RIESG_EXT.number_of_days - payslip.rule_parameter('Discount_BM_RIESGO_EXT')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_baja_riesg_ext" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Baja Médica Riesg Extraor</field>
        <field name="code">BM_RIESG_EXT</field>
        <field name="sequence">201</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = worked_days.BM_RIESG_EXT</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days.BM_RIESG_EXT.number_of_days - payslip.rule_parameter('Discount_BM_RIESGO_EXT')
if days > 0:
    result = BC_DIARIA_TOTAL_BRUTO * get_medical_leave_percent(payslip, 'BM_RIESG_EXT') * days
else:
    result = 0
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>


<!-- REGLAS TEMPORALES A MODIFICAR                          -->
    <record id="datec_l10n_bo_hr_payroll_last_ufv" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">UFV MES ANTERIOR</field>
        <field name="code">LAST_UFV</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = get_ufv_from_code(payslip, 'LAST_UFV')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_current_ufv" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">UFV MES ACTUAL</field>
        <field name="code">CURRENT_UFV</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = get_ufv_from_code(payslip, 'CURRENT_UFV')
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    Reglas para aportes patronales-->
    <record id="datec_l10n_bo_hr_payroll_a_risk_arp" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Aporte Riesgo Profesional</field>
        <field name="code">AP_ARP</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * payslip.rule_parameter('AP_ARP')/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_a_risk_asp" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Aporte Solidario Patronal</field>
        <field name="code">AP_ASP</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * payslip.rule_parameter('AP_ASP')/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_a_risk_apv" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Aporte Pro-Vivienda</field>
        <field name="code">AP_APV</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * payslip.rule_parameter('AP_APV')/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_a_risk_as" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Aporte de Salud</field>
        <field name="code">AP_AS</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * payslip.rule_parameter('AP_AS')/100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_prov_indemnification" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Prov Indemnización</field>
        <field name="code">PROV_INDEN</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * 8.33 / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_christmas_bonus_accruals" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Prov Aguinaldo</field>
        <field name="code">PROV_AGUI</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * 8.33 / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_second_christmas_bonus_accruals" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Prov Segundo Aguinaldo</field>
        <field name="code">PROV_2_AGUI</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * 8.33 / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_provisions_utility_bonus" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">Prov Prima utilidades</field>
        <field name="code">PROV_PRIMA</field>
        <field name="sequence">201</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS * 8.33 / 100
        </field>
        <field name="struct_id" ref="structure_month"/>
    </record>

<!--    FIN SALARIO MENSUAL    *********************************    -->


<!--     Reglas para quinquenal   -->

    <record id="datec_l10n_bo_hr_payroll_quinquenial_year" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">QUINQUENAL AÑOS</field>
        <field name="code">QUINQUENAL_YEAR</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = employee.GetQuinquennialYear(payslip.date_from, payslip.date_to)
        </field>
        <field name="struct_id" ref="structure_quinquennial"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_quinquenial_average" model="hr.salary.rule">
        <field name="category_id" ref="BASIC_INF"/>
        <field name="name">QUINQUENAL PROMEDIO</field>
        <field name="code">QUINQUENAL_AVERAGE</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = employee.GetQuinquennialAverage(payslip.date_from, payslip.date_to)
        </field>
        <field name="struct_id" ref="structure_quinquennial"/>
    </record>

    <record id="datec_l10n_bo_hr_payroll_quinquenial" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">QUINQUENAL</field>
        <field name="code">QUINQUENAL</field>
        <field name="sequence">11</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = QUINQUENAL_YEAR * QUINQUENAL_AVERAGE
        </field>
        <field name="struct_id" ref="structure_quinquennial"/>
    </record>

<!--    Reglas para el finiquito-->
<!--    <record id="datec_l10n_bo_hr_payroll_vac" model="hr.salary.rule">-->
<!--        <field name="category_id" ref="BASIC_INF"/>-->
<!--        <field name="name">VACACIONES</field>-->
<!--        <field name="code">VAC</field>-->
<!--        <field name="sequence">11</field>-->
<!--        <field name="condition_select">none</field>-->
<!--        <field name="amount_select">code</field>-->
<!--        <field name="amount_python_compute">-->
<!--if worked_days.VAC:-->
<!--    wage = total_average_earned(payslip, employee, 'NET', 3)/30 * worked_days.VAC.number_of_days-->
<!--    result = wage-->
<!--else:-->
<!--    result = 0-->
<!--        </field>-->
<!--        <field name="struct_id" ref="structure_month"/>-->
<!--    </record>-->

</odoo>

